{"version":3,"sources":["components/card/card.module.css","components/card_edit_form/card_edit_form.module.css","components/card_add_form/card_add_form.module.css","components/login/login.module.css","components/header/header.module.css","components/preview/preview.module.css","components/footer/footer.module.css","components/editor/editor.module.css","components/maker/maker.module.css","app.module.css","components/button/button.module.css","components/img_file_input/img_file_input.module.css","index.module.css","components/footer/footer.jsx","components/header/header.jsx","components/login/login.jsx","components/button/button.jsx","components/img_file_input/img_file_input.jsx","components/card_edit_form/card_edit_form.jsx","components/card_add_form/card_add_form.jsx","components/editor/editor.jsx","components/card/card.jsx","components/preview/preview.jsx","components/maker/maker.jsx","app.jsx","service/firebase.js","index.js","service/auth_service.js"],"names":["module","exports","Footer","props","className","styles","footer","title","Header","onLogout","header","logout","onClick","src","process","alt","logo","Login","authService","history","useHistory","goToMaker","userId","push","pathname","state","id","onLogin","event","login","currentTarget","textContent","then","data","user","uid","useEffect","onAuthChange","list","item","button","Button","name","ImgFileInput","CardEditForm","card","company","theme","email","message","nameRef","fileName","fileURL","useRef","companyRef","themeRef","titleRef","emailRef","messageRef","onChange","preventDefault","form","ref","input","value","select","textarea","fileInput","CardAddForm","onAddCard","formRef","titleeRef","placeholder","newCard","Date","now","current","titlee","fileUrl","reset","console","log","Editor","cards","editor","map","Card","url","card_list","dark","light","colorful","Error","getStyles","photo","info","Preview","preview","Maker","useState","fileNAme","setCards","maker","container","updatedCard","App","app","exact","path","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","providerName","authProvider","auth","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,MAAQ,oBAAoB,SAAW,uBAAuB,MAAQ,oBAAoB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,MAAQ,oBAAoB,MAAQ,oBAAoB,QAAU,wB,mBCAhUD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,MAAQ,8BAA8B,SAAW,iCAAiC,OAAS,+BAA+B,OAAS,+BAA+B,UAAY,oC,mBCApOD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,MAAQ,6BAA6B,SAAW,gCAAgC,OAAS,8BAA8B,OAAS,8BAA8B,UAAY,mC,mBCA/ND,EAAOC,QAAU,CAAC,WAAa,UAAU,WAAa,QAAQ,WAAa,QAAQ,eAAiB,UAAU,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,wB,mBCA1MD,EAAOC,QAAU,CAAC,WAAa,UAAU,WAAa,QAAQ,WAAa,QAAQ,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,yB,mBCAtLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,mBCA5FD,EAAOC,QAAU,CAAC,WAAa,UAAU,WAAa,QAAQ,WAAa,QAAQ,OAAS,uBAAuB,MAAQ,wB,mBCA3HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,QAAQ,MAAQ,qBAAqB,UAAY,2B,mBCAhFD,EAAOC,QAAU,CAAC,UAAY,YAAY,WAAa,UAAU,WAAa,QAAQ,WAAa,QAAQ,eAAiB,UAAU,IAAM,mB,mBCA5ID,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,iC,mBCA3BD,EAAOC,QAAU,CAAC,WAAa,U,4ICQhBC,EANA,SAACC,GAAD,OACb,wBAAQC,UAAWC,IAAOC,OAA1B,SACE,mBAAGF,UAAWC,IAAOE,MAArB,gC,iBCcWC,EAhBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBAAQL,UAAWC,IAAOK,OAA1B,UACGD,GACC,wBAAQL,UAAWC,IAAOM,OAAQC,QAASH,EAA3C,sCAIF,qBACEI,IAAKC,oCACLC,IAAI,OACJX,UAAWC,IAAOW,OAEpB,oBAAIZ,UAAWC,IAAOE,MAAtB,qC,iBCyCWU,EAlDD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAETC,EAAUC,cAGVC,EAAY,SAACC,GACjBH,EAAQI,KAAK,CACXC,SAAU,SACVC,MAAO,CAAEC,GAAIJ,MAIXK,EAAU,SAACC,GACfV,EACGW,MAAMD,EAAME,cAAcC,aAC1BC,MAAK,SAACC,GAAD,OAAUZ,EAAUY,EAAKC,KAAKC,SAYxC,OAPAC,qBAAU,WACRlB,EAAYmB,cAAa,SAACH,GACxBA,GAAQb,EAAUa,EAAKC,WAMzB,0BAAS/B,UAAWC,IAAOwB,MAA3B,UACE,cAAC,EAAD,CAAQX,YAAaA,IACrB,oCACE,uCACA,qBAAId,UAAWC,IAAOiC,KAAtB,UACE,oBAAIlC,UAAWC,IAAOkC,KAAtB,SACE,wBAAQnC,UAAWC,IAAOmC,OAAQ5B,QAASe,EAA3C,sBAIF,oBAAIvB,UAAWC,IAAOkC,KAAtB,SACE,wBAAQnC,UAAWC,IAAOmC,OAAQ5B,QAASe,EAA3C,4BAMN,cAAC,EAAD,Q,kDC3CSc,EALA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAM9B,EAAT,EAASA,QAAT,OACb,wBAAQR,UAAWC,IAAOmC,OAAQ5B,QAASA,EAA3C,SACG8B,K,yBCDUC,EADM,SAAC,GAAD,sBAAQ,wBAAQvC,UAAWC,IAAOmC,OAA1B,oB,iBC6EdI,EA3EM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdH,EACNG,EADMH,KAAMI,EACZD,EADYC,QAASC,EACrBF,EADqBE,MAAOxC,EAC5BsC,EAD4BtC,MAAOyC,EACnCH,EADmCG,MAAOC,EAC1CJ,EAD0CI,QAItCC,GAHJL,EADmDM,SACnDN,EAD6DO,QAI/CC,oBACVC,EAAaD,mBACbE,EAAWF,mBACXG,EAAWH,mBACXI,EAAWJ,mBACXK,EAAaL,mBAEbM,EAAW,SAAC/B,GACW,MAAvBA,EAAME,eAGVF,EAAMgC,kBAKR,OAEE,cADA,CACA,QAAMxD,UAAWC,IAAOwD,KAAxB,UACE,uBAAOC,IAAKZ,EAAS9C,UAAWC,IAAO0D,MAAOrB,KAAK,OAAOsB,MAAOtB,IACjE,uBACEiB,SAAUA,EACVG,IAAKR,EACLlD,UAAWC,IAAO0D,MAClBrB,KAAK,UACLsB,MAAOlB,IAGT,yBACEa,SAAUA,EACVG,IAAKP,EACLnD,UAAWC,IAAO4D,OAClBvB,KAAK,QACLsB,MAAOjB,EALT,UAOE,wBAAQiB,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAGF,uBACEL,SAAUA,EACVG,IAAKN,EACLpD,UAAWC,IAAO0D,MAClBrB,KAAK,QACLsB,MAAOzD,IAET,uBACEoD,SAAUA,EACVG,IAAKL,EACLrD,UAAWC,IAAO0D,MAClBrB,KAAK,QACLsB,MAAOhB,IAGT,6BACEW,SAAUA,EACVG,IAAKJ,EACLtD,UAAWC,IAAO6D,SAClBxB,KAAK,UACLsB,MAAOf,IAET,qBAAK7C,UAAWC,IAAO8D,UAAvB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAQzB,KAAK,SAAS9B,QAnDT,mB,iBCmEJwD,EArFK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAGfC,EAAUjB,mBACVH,EAAUG,mBACVC,EAAaD,mBACbE,EAAWF,mBACXkB,EAAYlB,mBACZI,EAAWJ,mBACXK,EAAaL,mBAsBnB,OAEE,cADA,CACA,QAAMS,IAAKQ,EAASlE,UAAWC,IAAOwD,KAAtC,UACE,uBACEC,IAAKZ,EACL9C,UAAWC,IAAO0D,MAClBrB,KAAK,OACL8B,YAAY,SAEd,uBACEV,IAAKR,EACLlD,UAAWC,IAAO0D,MAClBrB,KAAK,UACL8B,YAAY,YAGd,yBACEV,IAAKP,EACLnD,UAAWC,IAAO4D,OAClBvB,KAAK,QACL8B,YAAY,QAJd,UAME,wBAAQA,YAAY,QAApB,mBACA,wBAAQA,YAAY,OAApB,kBACA,wBAAQA,YAAY,WAApB,yBAGF,uBACEV,IAAKS,EACLnE,UAAWC,IAAO0D,MAClBrB,KAAK,SACL8B,YAAY,UAEd,uBACEV,IAAKL,EACLrD,UAAWC,IAAO0D,MAClBrB,KAAK,QACL8B,YAAY,UAGd,0BACEV,IAAKJ,EACLtD,UAAWC,IAAO6D,SAClBxB,KAAK,UACL8B,YAAY,YAEd,qBAAKpE,UAAWC,IAAO8D,UAAvB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAQzB,KAAK,MAAM9B,QArEN,SAACgB,GAChBA,EAAMgC,iBACN,IAAMa,EAAU,CACd/C,GAAIgD,KAAKC,MACTjC,KAAMQ,EAAQ0B,QAAQZ,OAAS,GAC/BlB,QAASQ,EAAWsB,QAAQZ,OAAS,GACrCjB,MAAOQ,EAASqB,QAAQZ,MACxBa,OAAQN,EAAUK,QAAQZ,OAAS,GACnChB,MAAOS,EAASmB,QAAQZ,OAAS,GACjCf,QAASS,EAAWkB,QAAQZ,OAAS,GACrCb,SAAU,GACV2B,QAAS,IAIXR,EAAQM,QAAQG,QAChBV,EAAUI,GACVO,QAAQC,IAAIR,UCnBDS,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOd,EAAV,EAAUA,UAAV,OACb,0BAASjE,UAAWC,IAAO+E,OAA3B,UACE,oBAAIhF,UAAWC,IAAOE,MAAtB,wBACC4E,EAAME,KAAI,SAACxC,GAAD,OACT,cAAC,EAAD,CAA4BA,KAAMA,GAAfA,EAAKnB,OAE1B,cAAC,EAAD,CAAa2C,UAAWA,Q,iBC+BbiB,EArCF,SAAC,GAAc,IAAZzC,EAAW,EAAXA,KAENH,EACNG,EADMH,KAAMI,EACZD,EADYC,QAASC,EACrBF,EADqBE,MAAOxC,EAC5BsC,EAD4BtC,MAAOyC,EACnCH,EADmCG,MAAOC,EAC1CJ,EAD0CI,QAGtCsC,GAFJ1C,EADmDM,SACnDN,EAD6DO,SAJ3CtC,6CAQpB,OACE,qBAAIV,UAAS,UAAKC,IAAOmF,UAAZ,YAaf,SAAmBzC,GACjB,OAAQA,GACN,IAAK,OACH,OAAO1C,IAAOoF,KAEhB,IAAK,QACH,OAAOpF,IAAOqF,MAEhB,IAAK,WACH,OAAOrF,IAAOsF,SAEhB,QACE,MAAM,IAAIC,MAAJ,iDAAsB7C,KAzBM8C,CAAU9C,IAAhD,UACE,qBAAKlC,IAAK0E,EAAKxE,IAAI,gBAAgBX,UAAWC,IAAOyF,QACrD,sBAAK1F,UAAWC,IAAO0F,KAAvB,UACE,oBAAI3F,UAAWC,IAAOqC,KAAtB,SAA6BA,IAC7B,mBAAGtC,UAAWC,IAAOyC,QAArB,SAA+BA,IAC/B,mBAAG1C,UAAWC,IAAOE,MAArB,SAA6BA,IAC7B,mBAAGH,UAAWC,IAAO2C,MAArB,SAA6BA,IAC7B,mBAAG5C,UAAWC,IAAO4C,QAArB,SAA+BA,W,iBCDxB+C,EAdC,SAAC,GAAe,IAAbb,EAAY,EAAZA,MAEjB,OADAH,QAAQC,IAAIE,GAEV,0BAAS/E,UAAWC,IAAO4F,QAA3B,UACE,oBAAI7F,UAAWC,IAAOE,MAAtB,0BACA,oBAAIH,UAAWC,IAAO8E,MAAtB,SACGA,EAAME,KAAI,SAACxC,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKnB,a,iBCuEXwE,EAzED,SAAC,GAAqB,IAAnBhF,EAAkB,EAAlBA,YAAkB,EACPiF,mBAAS,CAEjC,CACEzE,GAAI,IACJgB,KAAM,OACNI,QAAS,QACTC,MAAO,OACPxC,MAAO,qBACPyC,MAAO,oBACPC,QAAS,gBACTmD,SAAU,OACVhD,QAAS,MAGX,CACE1B,GAAI,IACJgB,KAAM,SACNI,QAAS,QACTC,MAAO,QACPxC,MAAO,qBACPyC,MAAO,mBACPC,QAAS,aACTE,SAAU,SACVC,QAAS,MAGX,CACE1B,GAAI,IACJgB,KAAM,OACNI,QAAS,UACTC,MAAO,WACPxC,MAAO,qBACPyC,MAAO,iBACPC,QAAS,oBACTmD,SAAU,OACVhD,QAAS,cApCoB,mBAC1B+B,EAD0B,KACnBkB,EADmB,KAwC3BlF,EAAUC,cAMhBgB,qBAAU,WAERlB,EAAYmB,cAAa,SAACH,GACnBA,GACHf,EAAQI,KAAK,WAWnB,OACE,0BAASnB,UAAWC,IAAOiG,MAA3B,UACE,cAAC,EAAD,CAAQ7F,SArBK,WACfS,EAAYP,YAqBV,sBAAKP,UAAWC,IAAOkG,UAAvB,UACE,cAAC,EAAD,CAAQpB,MAAOA,EAAOd,UAVT,SAACI,GAClB,IAAM+B,EAAW,sBAAOrB,GAAP,CAAcV,IAC/B4B,EAASG,GACTxB,QAAQC,IAAIR,MAQR,cAAC,EAAD,CAASU,MAAOA,OAElB,cAAC,EAAD,QCrDSsB,MAnBf,YAA+B,IAAhBvF,EAAe,EAAfA,YACb,OACE,mCACE,qBAAKd,UAAWC,IAAOqG,IAAvB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAO1F,YAAaA,MAEtB,cAAC,IAAD,CAAO0F,KAAK,SAAZ,SACE,cAAC,EAAD,CAAO1F,YAAaA,gB,wBCAnB2F,G,MAFKC,IAASC,cARN,CACrBC,OAAQlG,0CACRmG,WAAYnG,4CACZoG,YAAapG,sFACbqG,UAAWrG,+BCHPI,EAAc,I,qFCElB,SAAMkG,GACJ,IAAMC,EAAe,IAAIP,IAASQ,KAAT,UAAiBF,EAAjB,kBAIzB,OAAOP,EAAYS,OAAOC,gBAAgBF,K,oBAM5C,WACEP,IAASQ,OAAOE,Y,0BAMlB,SAAaC,GACXX,IAASQ,OAAOI,oBAAmB,SAACxF,GAClCuF,EAAcvF,U,MDpBpByF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK3G,YAAaA,MAEpB4G,SAASC,eAAe,W","file":"static/js/main.d998b0d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_list\":\"card_card_list__2TVWy\",\"dark\":\"card_dark__2ctEr\",\"light\":\"card_light__3ch_1\",\"colorful\":\"card_colorful__2c6nN\",\"photo\":\"card_photo__2w99A\",\"info\":\"card_info__3dK7P\",\"name\":\"card_name__1G83m\",\"company\":\"card_company__2jcD8\",\"title\":\"card_title__4Kow4\",\"email\":\"card_email__1Hhxx\",\"message\":\"card_message__1S9Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"card_edit_form_form___zwbq\",\"input\":\"card_edit_form_input__22Ibi\",\"textarea\":\"card_edit_form_textarea__P0DPh\",\"select\":\"card_edit_form_select__38MSK\",\"button\":\"card_edit_form_button__5ZlXk\",\"fileInput\":\"card_edit_form_fileInput__SxbvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"card_add_form_form__1inA_\",\"input\":\"card_add_form_input__2Y5Et\",\"textarea\":\"card_add_form_textarea__Stn3c\",\"select\":\"card_add_form_select__Fus_8\",\"button\":\"card_add_form_button__1_ZgL\",\"fileInput\":\"card_add_form_fileInput__3qVd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"login\":\"login_login__1ofqP\",\"list\":\"login_list__2oZdw\",\"item\":\"login_item__1a9IP\",\"button\":\"login_button__174Nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"header\":\"header_header__3UnjP\",\"logo\":\"header_logo__1Smm4\",\"title\":\"header_title__1YZbW\",\"logout\":\"header_logout__3OoTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview_preview__EDbcO\",\"title\":\"preview_title__1Nyte\",\"cards\":\"preview_cards__22sPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"footer\":\"footer_footer__39pZ8\",\"title\":\"footer_title__2mY0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor_editor__3BdTS\",\"title\":\"editor_title__Nb-Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mediaQuery\":\"62rem\",\"maker\":\"maker_maker__3Jnfs\",\"container\":\"maker_container__scz31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGray\":\"undefined\",\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"app\":\"app_app__lYoFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2Qt9c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"img_file_input_button__2qCNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWhite\":\"white\"};","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = (props) => (\r\n  <footer className={styles.footer}>\r\n    <p className={styles.title}>Code your dream</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = ({ onLogout }) => (\r\n  <header className={styles.header}>\r\n    {onLogout && (\r\n      <button className={styles.logout} onClick={onLogout}>\r\n        로그아웃\r\n      </button>\r\n    )}\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n      alt=\"logo\"\r\n      className={styles.logo}\r\n    />\r\n    <h1 className={styles.title}>Business Card Maker</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({ authService }) => {\r\n  // 로그인 할 수 있는 함수\r\n  const history = useHistory();\r\n\r\n  // goToMaker 를 실행할 때 userId 를 받을거다.\r\n  const goToMaker = (userId) => {\r\n    history.push({\r\n      pathname: \"/maker\",\r\n      state: { id: userId },\r\n      // 단순히 /maker 로 가는게 아니라 사용자의 정보도 같이 전달해주게 한다.)\r\n    });\r\n  };\r\n  const onLogin = (event) => {\r\n    authService //\r\n      .login(event.currentTarget.textContent)\r\n      .then((data) => goToMaker(data.user.uid));\r\n  };\r\n\r\n  // 특정상황에 마운트되거나 업데이트 될 때 로그아웃 함수가 일어나게 한다.\r\n  // 로그인 관련된거라 auth_service.js 에서 작성한 것을 가져와서 호출\r\n  useEffect(() => {\r\n    authService.onAuthChange((user) => {\r\n      user && goToMaker(user.uid);\r\n    });\r\n    // 기존에 사용자가 있으면 goToMaker 로 간다.\r\n  });\r\n\r\n  return (\r\n    <section className={styles.login}>\r\n      <Header authService={authService} />\r\n      <section>\r\n        <h1>Login</h1>\r\n        <ul className={styles.list}>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Google\r\n            </button>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Github\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ name, onClick }) => (\r\n  <button className={styles.button} onClick={onClick}>\r\n    {name}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./img_file_input.module.css\";\r\n\r\nconst ImgFileInput = ({}) => <button className={styles.button}>Image</button>;\r\nexport default ImgFileInput;\r\n","import React, { useRef } from \"react\";\r\nimport Button from \"../button/button\";\r\nimport ImgFileInput from \"../img_file_input/img_file_input\";\r\nimport styles from \"./card_edit_form.module.css\";\r\n\r\nconst CardEditForm = ({ card }) => {\r\n  const { name, company, theme, title, email, message, fileName, fileURL } =\r\n    card;\r\n\r\n  // 각 내용들이 바뀌면 함수가 호출되도록 onChange 를 한다.\r\n  const nameRef = useRef();\r\n  const companyRef = useRef();\r\n  const themeRef = useRef();\r\n  const titleRef = useRef();\r\n  const emailRef = useRef();\r\n  const messageRef = useRef();\r\n\r\n  const onChange = (event) => {\r\n    if (event.currentTarget == null) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onSubmit = () => {};\r\n\r\n  return (\r\n    // input의 value 는 card 에서 정보를 받아온다.\r\n    <form className={styles.form}>\r\n      <input ref={nameRef} className={styles.input} name=\"name\" value={name} />\r\n      <input\r\n        onChange={onChange}\r\n        ref={companyRef}\r\n        className={styles.input}\r\n        name=\"company\"\r\n        value={company}\r\n      />\r\n\r\n      <select\r\n        onChange={onChange}\r\n        ref={themeRef}\r\n        className={styles.select}\r\n        name=\"theme\"\r\n        value={theme}\r\n      >\r\n        <option value=\"light\">light</option>\r\n        <option value=\"dark\">dark</option>\r\n        <option value=\"colorful\">colorful</option>\r\n      </select>\r\n\r\n      <input\r\n        onChange={onChange}\r\n        ref={titleRef}\r\n        className={styles.input}\r\n        name=\"title\"\r\n        value={title}\r\n      />\r\n      <input\r\n        onChange={onChange}\r\n        ref={emailRef}\r\n        className={styles.input}\r\n        name=\"email\"\r\n        value={email}\r\n      />\r\n\r\n      <textarearef\r\n        onChange={onChange}\r\n        ref={messageRef}\r\n        className={styles.textarea}\r\n        name=\"message\"\r\n        value={message}\r\n      ></textarearef>\r\n      <div className={styles.fileInput}>\r\n        <ImgFileInput />\r\n      </div>\r\n      <Button name=\"Delete\" onClick={onSubmit} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardEditForm;\r\n","import React, { useRef } from \"react\";\r\nimport Button from \"../button/button\";\r\nimport ImgFileInput from \"../img_file_input/img_file_input\";\r\nimport styles from \"./card_add_form.module.css\";\r\n\r\n// CardAddForm에 onSubmit 콜백함수를 프롭으로 받아와서 함수 실행할거다.\r\nconst CardAddForm = ({ onAddCard }) => {\r\n  //  Add 를 해서 서밋됐을 때 각 인풋에 있는 데이터를 읽어오기 위해 ref 지정\r\n\r\n  const formRef = useRef();\r\n  const nameRef = useRef();\r\n  const companyRef = useRef();\r\n  const themeRef = useRef();\r\n  const titleeRef = useRef();\r\n  const emailRef = useRef();\r\n  const messageRef = useRef();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newCard = {\r\n      id: Date.now(),\r\n      name: nameRef.current.value || \"\",\r\n      company: companyRef.current.value || \"\",\r\n      theme: themeRef.current.value,\r\n      titlee: titleeRef.current.value || \"\",\r\n      email: emailRef.current.value || \"\",\r\n      message: messageRef.current.value || \"\",\r\n      fileName: \"\",\r\n      fileUrl: \"\",\r\n    };\r\n\r\n    // 사용자가 서밋하고 나면 form 으로 리셋한다.\r\n    formRef.current.reset();\r\n    onAddCard(newCard);\r\n    console.log(newCard);\r\n  };\r\n\r\n  return (\r\n    // input의 placeholder 는 card 에서 정보를 받아온다.\r\n    <form ref={formRef} className={styles.form}>\r\n      <input\r\n        ref={nameRef}\r\n        className={styles.input}\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        ref={companyRef}\r\n        className={styles.input}\r\n        name=\"company\"\r\n        placeholder=\"Company\"\r\n      />\r\n\r\n      <select\r\n        ref={themeRef}\r\n        className={styles.select}\r\n        name=\"theme\"\r\n        placeholder=\"Theme\"\r\n      >\r\n        <option placeholder=\"light\">light</option>\r\n        <option placeholder=\"dark\">dark</option>\r\n        <option placeholder=\"colorful\">colorful</option>\r\n      </select>\r\n\r\n      <input\r\n        ref={titleeRef}\r\n        className={styles.input}\r\n        name=\"titlee\"\r\n        placeholder=\"Title\"\r\n      />\r\n      <input\r\n        ref={emailRef}\r\n        className={styles.input}\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n      />\r\n\r\n      <textarea\r\n        ref={messageRef}\r\n        className={styles.textarea}\r\n        name=\"message\"\r\n        placeholder=\"Message\"\r\n      ></textarea>\r\n      <div className={styles.fileInput}>\r\n        <ImgFileInput />\r\n      </div>\r\n      <Button name=\"Add\" onClick={onSubmit} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardAddForm;\r\n","import React from \"react\";\r\nimport styles from \"./editor.module.css\";\r\nimport CardEditForm from \"../card_edit_form/card_edit_form\";\r\nimport CardAddForm from \"../card_add_form/card_add_form\";\r\n\r\nconst Editor = ({ cards, onAddCard }) => (\r\n  <section className={styles.editor}>\r\n    <h2 className={styles.title}>Card Maker</h2>\r\n    {cards.map((card) => (\r\n      <CardEditForm key={card.id} card={card} />\r\n    ))}\r\n    <CardAddForm onAddCard={onAddCard} />\r\n  </section>\r\n);\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nconst DEFAULT_IMAGE = process.env.PUBLIC_URL + \"/images/default_logo.png\";\r\n\r\nconst Card = ({ card }) => {\r\n  // 다중 변수 할당가능\r\n  const { name, company, theme, title, email, message, fileName, fileURL } =\r\n    card;\r\n\r\n  const url = fileURL || DEFAULT_IMAGE;\r\n  return (\r\n    <li className={`${styles.card_list} ${getStyles(theme)}`}>\r\n      <img src={url} alt=\"profile photo\" className={styles.photo} />\r\n      <div className={styles.info}>\r\n        <h2 className={styles.name}>{name}</h2>\r\n        <p className={styles.company}>{company}</p>\r\n        <p className={styles.title}>{title}</p>\r\n        <p className={styles.email}>{email}</p>\r\n        <p className={styles.message}>{message}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n  // 카드 색상 바꾸는 함수\r\n  function getStyles(theme) {\r\n    switch (theme) {\r\n      case \"dark\":\r\n        return styles.dark;\r\n\r\n      case \"light\":\r\n        return styles.light;\r\n\r\n      case \"colorful\":\r\n        return styles.colorful;\r\n\r\n      default:\r\n        throw new Error(`알수없는 오류: ${theme}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\nimport styles from \"./preview.module.css\";\r\n\r\nconst Preview = ({ cards }) => {\r\n  console.log(cards);\r\n  return (\r\n    <section className={styles.preview}>\r\n      <h2 className={styles.title}>Card Preview</h2>\r\n      <ul className={styles.cards}>\r\n        {cards.map((card) => (\r\n          <Card key={card.id} card={card} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Editor from \"../editor/editor\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport Preview from \"../preview/preview\";\r\nimport styles from \"./maker.module.css\";\r\n\r\n// 로그아웃을 하기위해 authService 를 받아온다.\r\nconst Maker = ({ authService }) => {\r\n  const [cards, setCards] = useState([\r\n    // 명함카드 데이터들\r\n    {\r\n      id: \"1\",\r\n      name: \"Sean\",\r\n      company: \"Naver\",\r\n      theme: \"dark\",\r\n      title: \"Front-end Engineer\",\r\n      email: \"vght103@naver.com\",\r\n      message: \"Don't give up\",\r\n      fileNAme: \"sean\",\r\n      fileURL: null,\r\n    },\r\n\r\n    {\r\n      id: \"2\",\r\n      name: \"Lowell\",\r\n      company: \"Kakao\",\r\n      theme: \"light\",\r\n      title: \"Front-end Engineer\",\r\n      email: \"lowell@naver.com\",\r\n      message: \"Make money\",\r\n      fileName: \"lowell\",\r\n      fileURL: null,\r\n    },\r\n\r\n    {\r\n      id: \"3\",\r\n      name: \"Paul\",\r\n      company: \"Coupang\",\r\n      theme: \"colorful\",\r\n      title: \"Front-end Engineer\",\r\n      email: \"paul@naver.com\",\r\n      message: \"What do you want?\",\r\n      fileNAme: \"paul\",\r\n      fileURL: \"paul.png\",\r\n    },\r\n  ]);\r\n\r\n  const history = useHistory();\r\n\r\n  const onLogout = () => {\r\n    authService.logout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 로그아웃이 되서 유저가 없는걸 감지하여 홈으로 보냄\r\n    authService.onAuthChange((user) => {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  });\r\n\r\n  const addNewCard = (newCard) => {\r\n    const updatedCard = [...cards, newCard];\r\n    setCards(updatedCard);\r\n    console.log(newCard);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.maker}>\r\n      <Header onLogout={onLogout} />\r\n      <div className={styles.container}>\r\n        <Editor cards={cards} onAddCard={addNewCard} />\r\n        <Preview cards={cards} />\r\n      </div>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Maker;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styles from \"./app.module.css\";\nimport Login from \"./components/login/login\";\nimport Maker from \"./components/maker/maker\";\n\nfunction App({ authService }) {\n  return (\n    <>\n      <div className={styles.app}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login authService={authService} />\n            </Route>\n            <Route path=\"/maker\">\n              <Maker authService={authService} />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase\";\r\n\r\n// import * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./app\";\nimport AuthService from \"./service/auth_service\";\n\nconst authService = new AuthService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App authService={authService} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import firebase from \"firebase\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\n// 사용자가 로그인/로그아웃 하는 것만 관리\r\nclass AuthService {\r\n  // 로그인함수\r\n\r\n  // providerName = 구글인지 트위터인지 깃허브인지를 받아온다.\r\n  login(providerName) {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n    // const provider = new firebase.auth.GoogleAuthProvider();\r\n    //  구글을 받아온 providerName 으로 넣어주면 꼭 구글이 아니더라도 다 가능\r\n\r\n    return firebaseApp.auth().signInWithPopup(authProvider);\r\n    // 과연?\r\n  }\r\n\r\n  // 로그아웃 함수\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // onUserChanged 라는 콜백함수를 받는 함수이다.\r\n  // .onAuthStateChanged((user) 에서 user 가 바뀔 때마다\r\n  // onUserChanged 에 바뀐 user를 전달해 실행한다.\r\n  onAuthChange(onUserChanged) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"sourceRoot":""}