{"version":3,"sources":["components/login/login.module.css","components/header/header.module.css","components/footer/footer.module.css","app.module.css","index.module.css","components/footer/footer.jsx","components/header/header.jsx","components/login/login.jsx","components/maker/maker.jsx","app.jsx","service/firebase.js","index.js","service/auth_service.js"],"names":["module","exports","Footer","props","className","styles","footer","title","Header","onLogout","header","logout","onClick","src","process","alt","logo","Login","authService","history","useHistory","goToMaker","userId","push","pathname","state","id","onLogin","event","login","currentTarget","textContent","then","data","user","uid","useEffect","onAuthChange","list","item","button","Maker","maker","App","app","exact","path","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","providerName","authProvider","auth","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6320a39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"login\":\"login_login__1ofqP\",\"list\":\"login_list__2oZdw\",\"item\":\"login_item__1a9IP\",\"button\":\"login_button__174Nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"header\":\"header_header__3UnjP\",\"logo\":\"header_logo__1Smm4\",\"title\":\"header_title__1YZbW\",\"logout\":\"header_logout__3OoTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"footer\":\"footer_footer__39pZ8\",\"title\":\"footer_title__2mY0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGray\":\"undefined\",\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"app\":\"app_app__lYoFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWhite\":\"white\"};","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = (props) => (\r\n  <footer className={styles.footer}>\r\n    <p className={styles.title}>Code your dream</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = ({ onLogout }) => (\r\n  <header className={styles.header}>\r\n    {onLogout && (\r\n      <button className={styles.logout} onClick={onLogout}>\r\n        로그아웃\r\n      </button>\r\n    )}\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n      alt=\"logo\"\r\n      className={styles.logo}\r\n    />\r\n    <h1 className={styles.title}>Business Card Maker</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({ authService }) => {\r\n  // 로그인 할 수 있는 함수\r\n  const history = useHistory();\r\n\r\n  // goToMaker 를 실행할 때 userId 를 받을거다.\r\n  const goToMaker = (userId) => {\r\n    history.push({\r\n      pathname: \"/maker\",\r\n      state: { id: userId },\r\n      // 단순히 /maker 로 가는게 아니라 사용자의 정보도 같이 전달해주게 한다.)\r\n    });\r\n  };\r\n  const onLogin = (event) => {\r\n    authService //\r\n      .login(event.currentTarget.textContent)\r\n      .then((data) => goToMaker(data.user.uid));\r\n  };\r\n\r\n  // 특정상황에 마운트되거나 업데이트 될 때 로그아웃 함수가 일어나게 한다.\r\n  // 로그인 관련된거라 auth_service.js 에서 작성한 것을 가져와서 호출\r\n  useEffect(() => {\r\n    authService.onAuthChange((user) => {\r\n      user && goToMaker(user.uid);\r\n    });\r\n    // 기존에 사용자가 있으면 goToMaker 로 간다.\r\n  });\r\n\r\n  return (\r\n    <section className={styles.login}>\r\n      <Header authService={authService} />\r\n      <section>\r\n        <h1>Login</h1>\r\n        <ul className={styles.list}>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Google\r\n            </button>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Github\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./maker.module.css\";\r\n\r\n// 로그아웃을 하기위해 authService 를 받아온다.\r\nconst Maker = ({ authService }) => {\r\n  const history = useHistory();\r\n\r\n  const onLogout = () => {\r\n    authService.logout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    authService.onAuthChange((user) => {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <section className={styles.maker}>\r\n      <Header onLogout={onLogout} />\r\n      <h2>Maker</h2>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Maker;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styles from \"./app.module.css\";\nimport Login from \"./components/login/login\";\nimport Maker from \"./components/maker/maker\";\n\nfunction App({ authService }) {\n  return (\n    <>\n      <div className={styles.app}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login authService={authService} />\n            </Route>\n            <Route path=\"/maker\">\n              <Maker authService={authService} />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./app\";\nimport AuthService from \"./service/auth_service\";\n\nconst authService = new AuthService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App authService={authService} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import firebase from \"firebase\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\n// 사용자가 로그인/로그아웃 하는 것만 관리\r\nclass AuthService {\r\n  // 로그인함수\r\n\r\n  // providerName = 구글인지 트위터인지 깃허브인지를 받아온다.\r\n  login(providerName) {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n    // const provider = new firebase.auth.GoogleAuthProvider();\r\n    //  구글을 받아온 providerName 으로 넣어주면 꼭 구글이 아니더라도 다 가능\r\n\r\n    return firebaseApp.auth().signInWithPopup(authProvider);\r\n  }\r\n\r\n  // 로그아웃 함수\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // onUserChanged 라는 콜백함수를 받는 함수이다.\r\n  // .onAuthStateChanged((user) 에서 user 가 바뀔 때마다\r\n  // onUserChanged 에 바뀐 user를 전달해 실행한다.\r\n  onAuthChange(onUserChanged) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"sourceRoot":""}