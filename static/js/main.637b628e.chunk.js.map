{"version":3,"sources":["components/card/card.module.css","components/card_edit_form/card_edit_form.module.css","components/card_add_form/card_add_form.module.css","components/login/login.module.css","components/header/header.module.css","components/img_file_input/img_file_input.module.css","components/preview/preview.module.css","components/footer/footer.module.css","components/editor/editor.module.css","components/maker/maker.module.css","app.module.css","components/button/button.module.css","index.module.css","components/footer/footer.jsx","components/header/header.jsx","components/login/login.jsx","components/button/button.jsx","components/card_edit_form/card_edit_form.jsx","components/img_file_input/img_file_input.jsx","components/card_add_form/card_add_form.jsx","components/editor/editor.jsx","components/card/card.jsx","components/preview/preview.jsx","components/maker/maker.jsx","app.jsx","service/firebase.js","service/auth_service.js","service/image_upload.js","service/card_repository.js","index.js"],"names":["module","exports","Footer","props","className","styles","footer","title","Header","onLogout","header","logout","onClick","src","process","alt","logo","Login","authService","history","useHistory","goToMaker","userId","push","pathname","state","id","onLogin","event","login","currentTarget","textContent","then","data","user","uid","useEffect","onAuthChange","list","item","button","Button","name","CardEditForm","FileInput","card","updateCard","deleteCard","company","theme","email","message","fileName","nameRef","fileURL","useRef","companyRef","themeRef","titleRef","emailRef","messageRef","onChange","preventDefault","value","form","ref","input","select","textarea","fileInput","onFileChange","file","url","ImgFileInput","imageUpload","inputRef","a","upload","target","files","uploaded","console","log","original_filename","container","type","accept","current","click","CardAddForm","onAddCard","formRef","titleeRef","useState","setFile","placeholder","newCard","Date","now","titlee","reset","Editor","cards","addCard","editor","Object","keys","map","key","Card","card_list","dark","light","colorful","Error","getStyles","photo","info","Preview","preview","Maker","cardRepository","historyState","location","setCards","setUserId","stopSync","syncCards","addOrUpdateCard","updated","saveCard","maker","removeCard","App","app","basename","exact","path","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","AuthService","providerName","authProvider","auth","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","ImageUpload","FormData","append","fetch","method","body","result","json","CardRepository","onUpdate","database","on","snapshot","val","off","set","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.637b628e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_list\":\"card_card_list__2TVWy\",\"dark\":\"card_dark__2ctEr\",\"light\":\"card_light__3ch_1\",\"colorful\":\"card_colorful__2c6nN\",\"photo\":\"card_photo__2w99A\",\"info\":\"card_info__3dK7P\",\"name\":\"card_name__1G83m\",\"company\":\"card_company__2jcD8\",\"title\":\"card_title__4Kow4\",\"email\":\"card_email__1Hhxx\",\"message\":\"card_message__1S9Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"card_edit_form_form___zwbq\",\"input\":\"card_edit_form_input__22Ibi\",\"textarea\":\"card_edit_form_textarea__P0DPh\",\"select\":\"card_edit_form_select__38MSK\",\"button\":\"card_edit_form_button__5ZlXk\",\"fileInput\":\"card_edit_form_fileInput__SxbvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"card_add_form_form__1inA_\",\"input\":\"card_add_form_input__2Y5Et\",\"textarea\":\"card_add_form_textarea__Stn3c\",\"select\":\"card_add_form_select__Fus_8\",\"button\":\"card_add_form_button__1_ZgL\",\"fileInput\":\"card_add_form_fileInput__3qVd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"login\":\"login_login__1ofqP\",\"list\":\"login_list__2oZdw\",\"item\":\"login_item__1a9IP\",\"button\":\"login_button__174Nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"header\":\"header_header__3UnjP\",\"logo\":\"header_logo__1Smm4\",\"title\":\"header_title__1YZbW\",\"logout\":\"header_logout__3OoTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"img_file_input_container__3YeAV\",\"input\":\"img_file_input_input__sH-1_\",\"button\":\"img_file_input_button__2qCNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview_preview__EDbcO\",\"title\":\"preview_title__1Nyte\",\"cards\":\"preview_cards__22sPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"footer\":\"footer_footer__39pZ8\",\"title\":\"footer_title__2mY0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor_editor__3BdTS\",\"title\":\"editor_title__Nb-Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maker\":\"maker_maker__3Jnfs\",\"container\":\"maker_container__scz31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGray\":\"undefined\",\"makerGreen\":\"#385461\",\"makerWhite\":\"white\",\"makerBlack\":\"black\",\"makerLightPink\":\"#ffeae8\",\"app\":\"app_app__lYoFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2Qt9c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWhite\":\"white\"};","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = (props) => (\r\n  <footer className={styles.footer}>\r\n    <p className={styles.title}>Code your dream</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = ({ onLogout }) => (\r\n  <header className={styles.header}>\r\n    {onLogout && (\r\n      <button className={styles.logout} onClick={onLogout}>\r\n        로그아웃\r\n      </button>\r\n    )}\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n      alt=\"logo\"\r\n      className={styles.logo}\r\n    />\r\n    <h1 className={styles.title}>Business Card Maker</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({ authService }) => {\r\n  // 로그인 할 수 있는 함수\r\n  const history = useHistory();\r\n\r\n  // goToMaker 를 실행할 때 userId 를 받을거다.\r\n  const goToMaker = (userId) => {\r\n    history.push({\r\n      pathname: \"/maker\",\r\n      state: { id: userId },\r\n      // 단순히 /maker 로 가는게 아니라 사용자의 정보도 같이 전달해주게 한다.)\r\n    });\r\n  };\r\n  const onLogin = (event) => {\r\n    authService //\r\n      .login(event.currentTarget.textContent)\r\n      .then((data) => goToMaker(data.user.uid));\r\n  };\r\n\r\n  // 특정상황에 마운트되거나 업데이트 될 때 로그아웃 함수가 일어나게 한다.\r\n  // 로그인 관련된거라 auth_service.js 에서 작성한 것을 가져와서 호출\r\n  useEffect(() => {\r\n    authService.onAuthChange((user) => {\r\n      user && goToMaker(user.uid);\r\n    });\r\n    // 기존에 사용자가 있으면 goToMaker 로 간다.\r\n  });\r\n\r\n  return (\r\n    <section className={styles.login}>\r\n      <Header authService={authService} />\r\n      <section>\r\n        <h1>Login</h1>\r\n        <ul className={styles.list}>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Google\r\n            </button>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <button className={styles.button} onClick={onLogin}>\r\n              Github\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ name, onClick }) => (\r\n  <button className={styles.button} onClick={onClick}>\r\n    {name}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import React, { useRef } from \"react\";\r\nimport Button from \"../button/button\";\r\nimport styles from \"./card_edit_form.module.css\";\r\n\r\nconst CardEditForm = ({ FileInput, card, updateCard, deleteCard }) => {\r\n  const { name, company, theme, title, email, message, fileName, fileURL } =\r\n    card;\r\n\r\n  // 각 input의 내용들이 바뀌면 함수가 호출되도록 onChange 를 한다.\r\n  const nameRef = useRef();\r\n  const companyRef = useRef();\r\n  const themeRef = useRef();\r\n  const titleRef = useRef();\r\n  const emailRef = useRef();\r\n  const messageRef = useRef();\r\n\r\n  const onFileChange = (file) => {\r\n    updateCard({\r\n      ...card,\r\n      fileName: file.name,\r\n      fileURL: file.url,\r\n    });\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    if (event.currentTarget == null) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n\r\n    // 기존의 카드의 키와 밸류를 가져다 쓰면서\r\n    updateCard({\r\n      ...card,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    deleteCard(card);\r\n  };\r\n\r\n  return (\r\n    // input의 value 는 card 에서 정보를 받아온다.\r\n    <form className={styles.form}>\r\n      <input\r\n        onChange={onChange}\r\n        ref={nameRef}\r\n        className={styles.input}\r\n        name=\"name\"\r\n        value={name}\r\n      />\r\n      <input\r\n        onChange={onChange}\r\n        ref={companyRef}\r\n        className={styles.input}\r\n        name=\"company\"\r\n        value={company}\r\n      />\r\n\r\n      <select\r\n        onChange={onChange}\r\n        ref={themeRef}\r\n        className={styles.select}\r\n        name=\"theme\"\r\n        value={theme}\r\n      >\r\n        <option value=\"light\">light</option>\r\n        <option value=\"dark\">dark</option>\r\n        <option value=\"colorful\">colorful</option>\r\n      </select>\r\n\r\n      <input\r\n        onChange={onChange}\r\n        ref={titleRef}\r\n        className={styles.input}\r\n        name=\"title\"\r\n        value={title}\r\n      />\r\n      <input\r\n        onChange={onChange}\r\n        ref={emailRef}\r\n        className={styles.input}\r\n        name=\"email\"\r\n        value={email}\r\n      />\r\n\r\n      <textarearef\r\n        onChange={onChange}\r\n        ref={messageRef}\r\n        className={styles.textarea}\r\n        name=\"message\"\r\n        value={message}\r\n      ></textarearef>\r\n      <div className={styles.fileInput}>\r\n        <FileInput name={fileName} onFileChange={onFileChange} />\r\n      </div>\r\n      <Button name=\"Delete\" onClick={onSubmit} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardEditForm;\r\n","import React, { useRef } from \"react\";\r\nimport styles from \"./img_file_input.module.css\";\r\n\r\nconst ImgFileInput = ({ imageUpload, name, onFileChange }) => {\r\n  const inputRef = useRef();\r\n\r\n  const onButtonClick = (event) => {\r\n    event.preventDefault();\r\n    inputRef.current.click();\r\n  };\r\n\r\n  const onChange = async (event) => {\r\n    // 이미지업로드 클래스에서 async 를 했기 때문에 promise 를 받는다\r\n    // 그래서 .then 해줘야함\r\n\r\n    const uploaded = await imageUpload.upload(event.target.files[0]);\r\n    console.log(event.target.files[0]);\r\n    console.log(uploaded);\r\n\r\n    onFileChange({\r\n      name: uploaded.original_filename,\r\n      url: uploaded.url,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // input을 숨김처리 해놓고, 스타일링한 박스를 클릭시 input이 실행되게 해야한다\r\n    <div className={styles.container}>\r\n      <input\r\n        ref={inputRef}\r\n        className={styles.input}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        name=\"file\"\r\n        onChange={onChange}\r\n      />\r\n      <button className={styles.button} onClick={onButtonClick}>\r\n        {name || \"No File\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ImgFileInput;\r\n","import React, { useRef, useState } from \"react\";\r\nimport Button from \"../button/button\";\r\nimport ImgFileInput from \"../img_file_input/img_file_input\";\r\nimport styles from \"./card_add_form.module.css\";\r\n\r\n// CardAddForm에 onSubmit 콜백함수를 프롭으로 받아와서 함수 실행할거다.\r\nconst CardAddForm = ({ FileInput, onAddCard }) => {\r\n  //  Add 를 해서 서밋됐을 때 각 인풋에 있는 데이터를 읽어오기 위해 ref 지정\r\n\r\n  const formRef = useRef();\r\n  const nameRef = useRef();\r\n  const companyRef = useRef();\r\n  const themeRef = useRef();\r\n  const titleeRef = useRef();\r\n  const emailRef = useRef();\r\n  const messageRef = useRef();\r\n\r\n  const [file, setFile] = useState({ fileName: null, fileURL: null });\r\n\r\n  const onFileChange = (file) => {\r\n    console.log(file);\r\n    setFile({\r\n      fileName: file.name,\r\n      fileURL: file.url,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newCard = {\r\n      id: Date.now(),\r\n      name: nameRef.current.value || \"\",\r\n      company: companyRef.current.value || \"\",\r\n      theme: themeRef.current.value,\r\n      titlee: titleeRef.current.value || \"\",\r\n      email: emailRef.current.value || \"\",\r\n      message: messageRef.current.value || \"\",\r\n      fileName: file.fileName || \"없음\",\r\n      fileURL: file.fileURL || \"없음\",\r\n    };\r\n\r\n    // 사용자가 서밋하고 나면 form 으로 리셋한다.\r\n    formRef.current.reset();\r\n    // card add 하고 초기화\r\n    setFile({ fileName: null, fileURL: null });\r\n    onAddCard(newCard);\r\n  };\r\n\r\n  return (\r\n    // input의 placeholder 는 card 에서 정보를 받아온다.\r\n    <form ref={formRef} className={styles.form}>\r\n      <input\r\n        ref={nameRef}\r\n        className={styles.input}\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        ref={companyRef}\r\n        className={styles.input}\r\n        name=\"company\"\r\n        placeholder=\"Company\"\r\n      />\r\n\r\n      <select\r\n        ref={themeRef}\r\n        className={styles.select}\r\n        name=\"theme\"\r\n        placeholder=\"Theme\"\r\n      >\r\n        <option placeholder=\"light\">light</option>\r\n        <option placeholder=\"dark\">dark</option>\r\n        <option placeholder=\"colorful\">colorful</option>\r\n      </select>\r\n\r\n      <input\r\n        ref={titleeRef}\r\n        className={styles.input}\r\n        name=\"titlee\"\r\n        placeholder=\"Title\"\r\n      />\r\n      <input\r\n        ref={emailRef}\r\n        className={styles.input}\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n      />\r\n\r\n      <textarea\r\n        ref={messageRef}\r\n        className={styles.textarea}\r\n        name=\"message\"\r\n        placeholder=\"Message\"\r\n      ></textarea>\r\n      <div className={styles.fileInput}>\r\n        <FileInput name={file.fileName} onFileChange={onFileChange} />\r\n      </div>\r\n      <Button name=\"Add\" onClick={onSubmit} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardAddForm;\r\n","import React from \"react\";\r\nimport styles from \"./editor.module.css\";\r\nimport CardEditForm from \"../card_edit_form/card_edit_form\";\r\nimport CardAddForm from \"../card_add_form/card_add_form\";\r\n\r\nconst Editor = ({ FileInput, cards, addCard, updateCard, deleteCard }) => (\r\n  <section className={styles.editor}>\r\n    <h2 className={styles.title}>Card Maker</h2>\r\n    {Object.keys(cards).map((key) => (\r\n      <CardEditForm\r\n        key={key}\r\n        FileInput={FileInput}\r\n        card={cards[key]}\r\n        updateCard={updateCard}\r\n        deleteCard={deleteCard}\r\n      />\r\n    ))}\r\n    <CardAddForm\r\n      FileInput={FileInput}\r\n      onAddCard={addCard}\r\n      deleteCard={deleteCard}\r\n    />\r\n  </section>\r\n);\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nconst DEFAULT_IMAGE = process.env.PUBLIC_URL + \"/images/default_logo.png\";\r\n\r\nconst Card = ({ card }) => {\r\n  // 다중 변수 할당가능\r\n  const { name, company, theme, title, email, message, fileName, fileURL } =\r\n    card;\r\n\r\n  const url = fileURL || DEFAULT_IMAGE;\r\n  return (\r\n    <li className={`${styles.card_list} ${getStyles(theme)}`}>\r\n      <img src={url} alt=\"profile photo\" className={styles.photo} />\r\n      <div className={styles.info}>\r\n        <h2 className={styles.name}>{name}</h2>\r\n        <p className={styles.company}>{company}</p>\r\n        <p className={styles.title}>{title}</p>\r\n        <p className={styles.email}>{email}</p>\r\n        <p className={styles.message}>{message}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n  // 카드 색상 바꾸는 함수\r\n  function getStyles(theme) {\r\n    switch (theme) {\r\n      case \"dark\":\r\n        return styles.dark;\r\n\r\n      case \"light\":\r\n        return styles.light;\r\n\r\n      case \"colorful\":\r\n        return styles.colorful;\r\n\r\n      default:\r\n        throw new Error(`알수없는 오류: ${theme}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\nimport styles from \"./preview.module.css\";\r\n\r\nconst Preview = ({ cards }) => {\r\n  return (\r\n    <section className={styles.preview}>\r\n      <h2 className={styles.title}>Card Preview</h2>\r\n      <ul className={styles.cards}>\r\n        {Object.keys(cards).map((key) => (\r\n          <Card key={key} card={cards[key]} />\r\n          // state를 오브젝트로 관리하기 때문에 오브젝트의 키들을 맵으로 돌린다\r\n          // maker 에서 state 에 지정한 id 1 2 3 이 key 다\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Editor from \"../editor/editor\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport Preview from \"../preview/preview\";\r\nimport styles from \"./maker.module.css\";\r\n\r\n// 로그아웃을 하기위해 authService 를 받아온다.\r\nconst Maker = ({ authService, FileInput, cardRepository }) => {\r\n  const history = useHistory();\r\n  const historyState = history?.location?.state;\r\n\r\n  const [cards, setCards] = useState({\r\n    // 데이터베이스를 이용할거라 여기는 비워놓고,\r\n    // 사용자가 카드 업데이트 혹은 삭제할 때, firebase 를 사용한 데이터베이스에\r\n    // 저장하고 삭제한다\r\n  });\r\n\r\n  // 유저의 id 로 데이터베이스를 불러오고 하기 때문에 userid 업데이트\r\n  const [userId, setUserId] = useState(historyState && historyState.id);\r\n\r\n  const onLogout = () => {\r\n    authService.logout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 마운트가 되었을 때, 그리고 userId 가 변경될때마다 호출\r\n    if (!userId) {\r\n      return;\r\n    }\r\n\r\n    const stopSync = cardRepository.syncCards(userId, (cards) => {\r\n      // stopSync 는 cardRepository.js 에 return () => ref.off(); 이다\r\n      //  컴포넌트가 언마운트 되었을 때 불필요한 네트워크 사용 최소화\r\n      setCards(cards);\r\n    });\r\n    return () => stopSync();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    // 로그인 관련 useEffect\r\n    // 로그아웃이 되서 유저가 없는걸 감지하여 홈으로 보냄\r\n    authService.onAuthChange((user) => {\r\n      // 유저가 있으면 setUserId 업데이트\r\n      // 유저 없으면 \"/\"로\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  });\r\n\r\n  // firebase 데이터 이용한 것\r\n  const addOrUpdateCard = (card) => {\r\n    // 전체 스테이트를 모두 업데이트 해줘야하기 때문에\r\n    // 기존 cards를 모두 복사해온다\r\n\r\n    setCards((cards) => {\r\n      const updated = { ...cards };\r\n      updated[card.id] = card;\r\n      return updated;\r\n    });\r\n    cardRepository.saveCard(userId, card);\r\n  };\r\n\r\n  const deleteCard = (card) => {\r\n    setCards((cards) => {\r\n      const updated = { ...cards };\r\n      delete updated[card.id];\r\n      return updated;\r\n    });\r\n    cardRepository.removeCard(userId, card);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.maker}>\r\n      <Header onLogout={onLogout} />\r\n      <div className={styles.container}>\r\n        <Editor\r\n          FileInput={FileInput}\r\n          cards={cards}\r\n          addCard={addOrUpdateCard}\r\n          updateCard={addOrUpdateCard}\r\n          deleteCard={deleteCard}\r\n        />\r\n        <Preview cards={cards} />\r\n      </div>\r\n      <Footer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Maker;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styles from \"./app.module.css\";\nimport Login from \"./components/login/login\";\nimport Maker from \"./components/maker/maker\";\n\nfunction App({ authService, FileInput, cardRepository }) {\n  return (\n    <>\n      <div className={styles.app}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login authService={authService} />\n            </Route>\n            <Route path=\"/maker\">\n              <Maker\n                authService={authService}\n                FileInput={FileInput}\n                cardRepository={cardRepository}\n              />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;\r\n","import firebase from \"firebase\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\n// 사용자가 로그인/로그아웃 하는 것만 관리\r\nclass AuthService {\r\n  // 로그인함수\r\n\r\n  // providerName = 구글인지 트위터인지 깃허브인지를 받아온다.\r\n  login(providerName) {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n    // const provider = new firebase.auth.GoogleAuthProvider();\r\n    //  구글을 받아온 providerName 으로 넣어주면 꼭 구글이 아니더라도 다 가능\r\n\r\n    return firebaseApp.auth().signInWithPopup(authProvider);\r\n    // 과연?\r\n  }\r\n\r\n  // 로그아웃 함수\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // onUserChanged 라는 콜백함수를 받는 함수이다.\r\n  // .onAuthStateChanged((user) 에서 user 가 바뀔 때마다\r\n  // onUserChanged 에 바뀐 user를 전달해 실행한다.\r\n  onAuthChange(onUserChanged) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","// 클라우디나리 REST API 통신\r\n\r\nclass ImageUpload {\r\n  async upload(file) {\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"upload_preset\", \"pkllus2y\");\r\n    const result = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/dpzg13oq4/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    return await result.json();\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n","//  사용자가 카드를 생성하고 저장하고 삭제할 때 발생하는 함수들\r\n//  firebase 리얼타임에서 실시간으로 업데이트 되고 삭제하는 것을 볼 수 있다.\r\n\r\nimport firebaseApp from \"./firebase\";\r\n\r\nclass CardRepository {\r\n  // firebase 에서 해당경로에 데이터가 계속 업데이트가 된다면,\r\n  // snapshot에 value 가 설정되어 있다면 onUpdate 콜백함수를 계속 실행한다.\r\n  syncCards(userId, onUpdate) {\r\n    const ref = firebaseApp.database().ref(`${userId}/cards`);\r\n    ref.on(\"value\", (snapshot) => {\r\n      const value = snapshot.val();\r\n      if (value) {\r\n        onUpdate(value);\r\n      }\r\n      // value 는 곧 maker 에서 온 cards 다\r\n    });\r\n\r\n    // 계속  sync 되는 함수를 끌 수 있는 함수\r\n    return () => ref.off();\r\n  }\r\n\r\n  saveCard(userId, card) {\r\n    firebaseApp.database().ref(`${userId}/cards/${card.id}`).set(card);\r\n  }\r\n\r\n  removeCard(userId, card) {\r\n    firebaseApp.database().ref(`${userId}/cards/${card.id}`).remove();\r\n  }\r\n}\r\n\r\nexport default CardRepository;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./app\";\nimport AuthService from \"./service/auth_service\";\nimport ImageUpload from \"./service/image_upload\";\nimport ImgFileInput from \"./components/img_file_input/img_file_input\";\nimport CardRepository from \"./service/card_repository\";\n\nconst authService = new AuthService();\nconst imageUpload = new ImageUpload();\nconst cardRepository = new CardRepository();\n\nconst FileInput = (props) => (\n  <ImgFileInput {...props} imageUpload={imageUpload} />\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n      authService={authService}\n      FileInput={FileInput}\n      cardRepository={cardRepository}\n    />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}